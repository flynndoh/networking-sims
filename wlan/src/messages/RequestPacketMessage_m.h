//
// Generated file, do not edit! Created by opp_msgtool 6.0 from messages/RequestPacketMessage.msg.
//

#ifndef __REQUESTPACKETMESSAGE_M_H
#define __REQUESTPACKETMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class RequestPacketMessage;
/**
 * Class generated from <tt>messages/RequestPacketMessage.msg:1</tt> by opp_msgtool.
 * <pre>
 * message RequestPacketMessage
 * {
 * }
 * </pre>
 */
class RequestPacketMessage : public ::omnetpp::cMessage
{
  protected:

  private:
    void copy(const RequestPacketMessage& other);

  protected:
    bool operator==(const RequestPacketMessage&) = delete;

  public:
    RequestPacketMessage(const char *name=nullptr, short kind=0);
    RequestPacketMessage(const RequestPacketMessage& other);
    virtual ~RequestPacketMessage();
    RequestPacketMessage& operator=(const RequestPacketMessage& other);
    virtual RequestPacketMessage *dup() const override {return new RequestPacketMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RequestPacketMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RequestPacketMessage& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline RequestPacketMessage *fromAnyPtr(any_ptr ptr) { return check_and_cast<RequestPacketMessage*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __REQUESTPACKETMESSAGE_M_H

